* Panda Peek

Commandline tool for printing tables to the terminal using pandas
without firing up the interpreter.

Simply install:

#+BEGIN_SRC bash
  cd panda-peek
  pip install -e .
#+END_SRC

And then peek at your tables:

#+BEGIN_SRC bash
  peek my_table.csv
#+END_SRC

Right now it just assumes the first column is the index and does not
type-casting of columns (yet).  It assumes this because it matches the
default write function in pandas.

* Future Plans and Ideas

Feel free to help out and mutate!

*** Support for many pandas arguments
- [ ] delimiter
- [ ] header
- [ ] comments

*** Table datatypes

**** Commandline arguments

Specify which column is the index and the type of all the others
#+BEGIN_SRC bash
  peek --col-dtypes index,string,float,int,bool my_df.csv
#+END_SRC


**** From a specific file

Explicitly:
#+BEGIN_SRC bash
  peek --df-dtype my_df.dtype my_df.csv
  peek -d my_df.dtype my_df.csv
#+END_SRC

Implicitly looking in my_df.dtype: (???)
#+BEGIN_SRC bash
  peek -D my_df.csv
#+END_SRC

**** From a .peek.dtype file

A python module which contains a dictionary mapping column names to datatypes:

#+BEGIN_SRC python :tangle .peek.dtype
  from enum import Enum
  from collections import namedtuple

  class Sex(Enum):
      MALE = 'male'
      FEMALE = 'female'

  CollectionRecord = namedtuple('CollectionRecord', ['museum', 'collection', 'drawer'])

  specimen = {'specimen_names' : str,
                'specimen_heights' : float,
                'specimen_alive' : bool,
                'specimen_sex' : Sex,
                'specimen_collection' : CollectionRecord,
                'collection_coordinates' : (float, float, float)}
#+END_SRC

And while in the same directory it will look in the file for the dtype
dictionary you ask for:

#+BEGIN_SRC bash
  peek -P specimen collection.csv
#+END_SRC

*** Specific Lines

The first ten lines of a file (head):
#+BEGIN_SRC bash
  peek -h 10 collections.csv
#+END_SRC

The last 30 lines (tail):
#+BEGIN_SRC bash
  peek -t 10 collections.csv
#+END_SRC

First 3 lines and last 3 lines:
#+BEGIN_SRC bash
  peek -h 3 -t 3 collections.csv
#+END_SRC

Between lines 8 and 20:
#+BEGIN_SRC bash
  peek -f 8 -l 20 collections.csv
#+END_SRC

After line 12:
#+BEGIN_SRC bash
  peek -f 12 collections.csv
#+END_SRC

Before line 16:
#+BEGIN_SRC bash
  peek -l 16 collections.csv
#+END_SRC


From a .peek.view which is either lists or slices of indices or filter strings:
#+BEGIN_SRC python :tangle .peek.view
  # my selection I care about
  selection1 = [0,1,3,5,6]

  # query for males
  males = 'specimen_sex == male'
#+END_SRC


#+BEGIN_SRC bash
  peek -I selection1 collections.csv
  peek -I males collections.csv
#+END_SRC
